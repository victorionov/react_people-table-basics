{"version":3,"sources":["components/PageNavLink.tsx","components/NavBar.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","NavBar","role","HomePage","NotFoundPage","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","personSlug","map","born","died","fatherName","motherName","mother","father","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","fetchPeople","useCallback","peopleFromServer","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"2QASaA,EAA8C,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACzD,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAFb,SAOGF,GARsD,ECN9CI,EAAmB,kBAC9B,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,SAASC,KAAK,iBAVN,ECDnBM,EAAqB,kBAChC,oBAAIL,UAAU,QAAd,sBADgC,ECArBM,EAAyB,kBACpC,oBAAIN,UAAU,QAAd,2BADoC,E,qBCAzBO,G,MAAS,kBACpB,qBAAKP,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCChBQ,EAAU,oEAMT,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCLM,IAAMQ,EAA2C,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACtD,cAAC,IAAD,CACErB,GAAE,kBAAaqB,EAAOC,MACtBpB,UAAWE,IACT,CAAE,kBAAkC,MAAfiB,EAAOE,MAHhC,SAMGF,EAAOG,MAP4C,ECC3CC,EAA8C,SAAC,GAAD,IACzDC,EADyD,EACzDA,OACAC,EAFyD,EAEzDA,WAFyD,OAIzD,wBACE,UAAQ,cACRzB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGwB,EAAOE,KAAI,SAAAP,GACV,IACEE,EAQEF,EARFE,IACAM,EAOER,EAPFQ,KACAC,EAMET,EANFS,KACAC,EAKEV,EALFU,WACAC,EAIEX,EAJFW,WACAV,EAGED,EAHFC,KACAW,EAEEZ,EAFFY,OACAC,EACEb,EADFa,OAGF,OACE,qBACE,UAAQ,SACRhC,UACEE,IAAW,CAAE,yBAA0BuB,IAAeL,IAH1D,UAME,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAEtB,6BAAKE,IACL,6BAAKM,IACL,6BAAKC,IACL,6BACGG,EAAS,cAAC,EAAD,CAAYZ,OAAQY,IAAaD,GAAc,MAE3D,6BACGE,EAAS,cAAC,EAAD,CAAYb,OAAQa,IAAaH,GAAc,QAIhE,QArDoD,ECH9CI,EAAuB,WAClC,MAA4BC,cAApBT,kBAAR,MAAqB,GAArB,EACA,EAA4BU,mBAAmB,IAA/C,mBAAOX,EAAP,KAAeY,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAcC,sBAAW,gCAC7B,uHAEmCjC,IAFnC,OAEUkC,EAFV,OAIIP,EAAUO,GACVL,GAAa,GALjB,gDAOIE,GAAY,GAPhB,QAUEF,GAAa,GAVf,yDAWG,IAOL,OAJAM,qBAAU,WACRH,GACD,GAAE,IAGD,sBAAKzC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGqC,GACC,cAAC,EAAD,IAEDE,GACC,mBAAG,UAAQ,qBAAqBvC,UAAU,kBAA1C,kCAKDwB,EAAOqB,OAAS,GACf,cAAC,EAAD,CACErB,OAAQA,EACRC,WAAYA,WAOzB,ECjDYqB,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAM9C,UAAU,UAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUlD,GAAG,IAAImD,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,gBAV1B,ECCnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.21f92791.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface PageNavLinkPropsType {\n  to: string,\n  text: string,\n}\n\nexport const PageNavLink: React.FC<PageNavLinkPropsType> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ninterface PersonLinkPropsType {\n  person: Person,\n}\n\nexport const PersonLink:React.FC<PersonLinkPropsType> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface PeopleTablePropsType {\n  people: Person[],\n  personSlug: string,\n}\n\nexport const PeopleTable: React.FC<PeopleTablePropsType> = ({\n  people,\n  personSlug,\n}) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => {\n        const {\n          sex,\n          born,\n          died,\n          fatherName,\n          motherName,\n          slug,\n          mother,\n          father,\n        } = person;\n\n        return (\n          <tr\n            data-cy=\"person\"\n            className={\n              classNames({ 'has-background-warning': personSlug === slug })\n            }\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>\n              {mother ? <PersonLink person={mother} /> : motherName || '-'}\n            </td>\n            <td>\n              {father ? <PersonLink person={father} /> : fatherName || '-'}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { useParams } from 'react-router-dom';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { personSlug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const fetchPeople = useCallback(\n    async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n        setIsLoading(false);\n      } catch {\n        setHasError(true);\n      }\n\n      setIsLoading(false);\n    }, [],\n  );\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />)}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable\n              people={people}\n              personSlug={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}